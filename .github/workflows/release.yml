name: release
on:
  push:
    tags: [ 'v*' ]

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Install fyne tools
        run: |
          go install fyne.io/fyne/v2/cmd/fyne@latest
          go install github.com/fyne-io/fyne-cross@latest
      - name: Build
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            fyne-cross linux --arch=amd64,arm64,arm --name yt-downloader --icon Icon.png --output dist --ldflags "-X main.version=${VERSION}"
            fyne-cross windows --arch=386,amd64 --name yt-downloader --icon Icon.png --output dist --ldflags "-X main.version=${VERSION}"
            fyne-cross android --arch=arm64,arm,amd64,386 --name yt-downloader --icon Icon.png --app-id com.ytget.yt-downloader --output dist --ldflags "-X main.version=${VERSION}"
          else
            fyne-cross darwin --arch=amd64,arm64 --name yt-downloader --icon Icon.png --app-id com.ytget.yt-downloader --output dist --ldflags "-X main.version=${VERSION}"
            fyne-cross ios --name yt-downloader --icon Icon.png --app-id com.ytget.yt-downloader --output dist --no-sign --ldflags "-X main.version=${VERSION}"
          fi
      - name: Prepare artifacts
        run: |
          mkdir -p release-artifacts
          VERSION=${GITHUB_REF_NAME#v}
          
          # Create platform-specific directories
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            # Linux
            mkdir -p release-artifacts/linux
            find fyne-cross/bin/linux -type f -name "yt-downloader*" -exec cp {} release-artifacts/linux/ \;
            
            # Windows
            mkdir -p release-artifacts/windows
            find fyne-cross/bin/windows -type f -name "yt-downloader*" -exec cp {} release-artifacts/windows/ \;
            
            # Android
            mkdir -p release-artifacts/android
            find fyne-cross/bin/android -type f -name "*.apk" -exec cp {} release-artifacts/android/ \;
          else
            # macOS
            mkdir -p release-artifacts/macos
            find fyne-cross/bin/darwin -type d -name "*.app" -exec cp -r {} release-artifacts/macos/ \;
            
            # iOS
            mkdir -p release-artifacts/ios
            find fyne-cross/bin/ios -type f -name "*.ipa" -exec cp {} release-artifacts/ios/ \;
          fi
          
          # Create archives for each platform
          cd release-artifacts
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            tar -czf yt-downloader-${VERSION}-linux.tar.gz linux/
            zip -r yt-downloader-${VERSION}-windows.zip windows/
            cp android/*.apk ./yt-downloader-${VERSION}.apk
          else
            zip -r yt-downloader-${VERSION}-macos.zip macos/
            cp ios/*.ipa ./yt-downloader-${VERSION}.ipa
          fi
          cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: ytdl-${{ matrix.os }}-artifacts
          path: release-artifacts/*.*

  publish:
    runs-on: ubuntu-latest
    needs: [ build-matrix ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Display structure of downloaded files
        run: ls -R ./artifacts
      - name: Create release notes
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "# YT Downloader v${VERSION}" > release-notes.md
          echo "" >> release-notes.md
          echo "## Platforms" >> release-notes.md
          echo "- Linux (amd64, arm64, arm)" >> release-notes.md
          echo "- macOS (amd64, arm64)" >> release-notes.md
          echo "- Windows (x86, x64)" >> release-notes.md
          echo "- Android" >> release-notes.md
          echo "- iOS (unsigned)" >> release-notes.md
          echo "" >> release-notes.md
          if [ -f "release-${GITHUB_REF_NAME}.md" ]; then
            cat "release-${GITHUB_REF_NAME}.md" >> release-notes.md
          fi
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.*
          body_path: release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

